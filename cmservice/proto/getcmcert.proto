syntax = "proto3";
package cmservice;
option go_package = ".;cmservice";
service ChainMakerCertApply {
rpc GenerateCert(ChainMakerCertApplyReq)returns(GenerateResp){}
rpc GetCertTar(GetCertTarReq) returns (TarCertResp){}
}
message ChainMakerCertApplyReq {
  string chain_id = 1;
  repeated Org orgs = 2;
  string filetarget = 3;
}
message GetCertTarReq {
  string filetarget = 1;
  string filesource = 2;
}
message Org {
  string country = 1;
  string locality =2;
  string province =3;
  repeated Node nodes = 4;
  repeated User users = 5;
  string org_id=6;
}
message Node {
string node_id=1;
NodeType type=2;
repeated string sans=3;
}
message User {
  string user_name=1;
  UserType type=2;
}
enum UserType{
  admin=0;
  client=1;
}
enum NodeType {
  consensus=0;
  common=1;
}

message TarCertResp {
bytes certfile = 1;
}
message GenerateResp{
  string filepath =1;
}